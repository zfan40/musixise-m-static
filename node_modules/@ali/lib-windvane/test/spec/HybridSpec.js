describe('Hybrid API', function(){
    var Ali = window.Ali || lib.Ali;
    var WindVane = window.WindVane || lib.windvane;
    var returnValues = [
        'HY_SUCCESS',
        'HY_NO_HANDLER',
        'HY_PARAM_ERR',
        'HY_NO_PERMISSION',
        'HY_FAILED',
        'HY_CLOSED'
    ];

    function testBefore(testCase, resultObj){
        return function(done){
            testCase(function(data){
                resultObj.result = data;
                done();
            });
        }
    }

    describe('Ali.toast', function(){
        var resultObj = {};
        var msg = 'Hello World!';
        
        beforeEach(testBefore(function(success){
            Ali.toast(msg, success);
        }, resultObj));

        it('call toast ok', function(){
            expect(resultObj.result.errorCode).toEqual(-1);
        });
    });

    describe('Ali.setTitle', function(){
        var resultObj = {};
        var title = 'Hello Hybrid API';

        beforeEach(testBefore(function(success){
            Ali.setTitle(title, success);
        }, resultObj));
        
        it('call setTitle ok', function(){
            expect(resultObj.result.errorCode).toEqual(-1);
            expect(document.title).toEqual(title);
        });
    });

    describe('Ali.showTitle', function(){
        var resultObj = {};

        beforeEach(testBefore(function(success){
            Ali.showTitle(success);
        }, resultObj));
        
        it('call showTitle ok', function(){
            expect(resultObj.result.errorCode).toEqual(-1);
        });
    });

    describe('Ali.hideTitle', function(){
        var resultObj = {};

        beforeEach(testBefore(function(success){
            Ali.hideTitle(success);
        }, resultObj));
        
        it('call hideTitle ok', function(){
            expect(resultObj.result.errorCode).toEqual(-1);
        });
    });

    describe('Ali.pushWindow', function(){
        var resultObj = {};
        var oldUrl = location.href;
        var newUrl = '#'; //prevent location.href behavior by using hash
        var nativeLocation = window.location;

        beforeEach(testBefore(function(success){
            Ali.pushWindow(newUrl, success);
        }, resultObj));
        
        it('call pushWindow ok', function(){
            expect(resultObj.result.errorCode).toEqual(-1);
        });
    });

    describe('Ali.popWindow', function(){
        var resultObj = {};

        beforeEach(testBefore(function(success){
            Ali.popWindow(success);
        }, resultObj));
        
        it('call popWindow ok', function(){
            expect(resultObj.result.errorCode).toEqual(-1);
        });
    });

    // describe('Ali.login', function(){
    //     var resultObj = {};

    //     beforeEach(testBefore(function(success){
    //         Ali.login(success);
    //     }, resultObj));
        
    //     it('call login ok', function(){
    //         expect(resultObj.result.errorCode).toEqual(-1);
    //     });
    // });

    // describe('Ali.tradePay', function(){
    //     var resultObj = {};

    //     beforeEach(testBefore(function(success){
    //         Ali.tradePay({
    //             signStr: '',
    //             alipayURL: '',
    //             backURL: '',
    //             unSuccessUrl: ''
    //         }, success);
    //     }, resultObj));
        
    //     it('call tradePay ok', function(){
    //         expect(resultObj.result.errorCode).toEqual(-1);
    //     });
    // });

    describe('Ali.geolocation', function(){
        var resultObj = {};

        beforeEach(testBefore(function(success){
            Ali.geolocation.getCurrentPosition(success);
        }, resultObj));
        
        it('call geolocation.getCurrentPosition ok', function(){
            expect(resultObj.result.errorCode).toEqual(-1);
            expect(resultObj.result.data.city).toEqual('杭州市');
        });
    });

    describe('Ali.shake', function(){
        var resultObj = {}, shakeCount = 0;

        function onShake(){
            shakeCount++;
        }

        describe('shake.watch', function(){
            beforeEach(testBefore(function(success){
                Ali.shake.watch(onShake, success);
            }, resultObj));

            afterEach(function(){
                for(p in resultObj) delete resultObj[p];
                shakeCount = 0;
            });
            
            it('call shake.watch ok', function(){
                expect(resultObj.result.errorCode).toEqual(-1);
            });
            
            it('event motion.shake ok', function(){
                WindVane.fireEvent('motion.shake');
                expect(shakeCount).toEqual(1);
                WindVane.fireEvent('motion.shake');
                expect(shakeCount).toEqual(2);
            });
        });

        describe('shake.clearWatch', function(){
            beforeEach(testBefore(function(success){
                Ali.shake.clearWatch(onShake, success);
            }, resultObj));

            it('call shake.clearWatch ok', function(){
                expect(resultObj.result.errorCode).toEqual(-1);
            });

            it('event motion.shake should be disabled', function(){
                WindVane.fireEvent('motion.shake');
                expect(shakeCount).toEqual(0);
                WindVane.fireEvent('motion.shake');
                expect(shakeCount).toEqual(0);
            });
        });
        
    });

    describe('Ali.vibration', function(){
        var resultObj = {};

        beforeEach(testBefore(function(success){
            Ali.vibration.vibrate(0, success);
        }, resultObj));
        
        it('call vibration.vibrate ok', function(){
            expect(resultObj.result.errorCode).toEqual(-1);
        });
    });

    describe('Ali.network', function(){
        var resultObj = {};

        beforeEach(testBefore(function(success){
            Ali.network.getType(success);
        }, resultObj));
        
        it('call nework.getType ok', function(){
            expect(resultObj.result.errorCode).toEqual(-1);
            expect(resultObj.result.data.isWifi).toEqual(true);
            expect(resultObj.result.data.isOnline).toEqual(true);
        });
    });

    // describe('Ali.calendar', function(){
    //     var resultObj = {};

    //     beforeEach(testBefore(function(success){
    //         Ali.calendar.add({
    //             title: 'test',
    //             startTime: '20140728225000',
    //             endTime: '20140820170000',
    //             link: 'http://m.taobao.com',
    //             eventId: 1001,
    //             sourceId: 8003
    //         }, success);
    //     }, resultObj));
        
    //     it('call calendar.add ok', function(){
    //         expect(resultObj.result.errorCode).toEqual(-1);
    //     });
    // });
    
    describe('Ali.photo', function(){
        var resultObj = {};

        beforeEach(testBefore(function(success){
            Ali.photo(null, success);
        }, resultObj));
        
        it('call photo ok', function(){
            expect(resultObj.result.errorCode).toEqual(-1);
            expect(resultObj.result.data.resourceURL).toEqual('http://foo.png');
        });
    });

    describe('Ali.contacts', function(){
        var resultObj = {};

        beforeEach(testBefore(function(success){
            Ali.contacts.get(null, success);
        }, resultObj));
        
        it('call contacts.get ok', function(){
            expect(resultObj.result.errorCode).toEqual(-1);
            expect(resultObj.result.data.results[0].name).toEqual('foo');
            expect(resultObj.result.data.results[0].phoneNumber).toEqual('13800000000');
        });
    });

});