var noop = require('./function/noop');
var urlAddData = require('./url/addData');
var extend = require('./object/extend/deep');
var uniqueId = require('./uniqueId');

function ajax(url, options, abortObject) {

  var sendData = null;
  var config;

  if (!url) {
    throw new Error('No url! Provide one or catch this error');
  }

  config = extend({}, ajax.defaults, options);

  if (config.method === 'post') {
    sendData = config.data;
    config.header.push(['Content-type', config.postType]);
  } else {
    url = urlAddData(url, config.data);
  }

  if (!config.cache) {
    url = urlAddData(url, uniqueId());
  }

  return new Promise(function (resolve, reject) {

    var xhr = new XMLHttpRequest();

    if (abortObject) {
      abortObject.abort = xhr.abort.bind(xhr);
    }

    xhr.responseType = config.responseType;

    if (config.timeout > 0) {
      xhr.timeout = config.timeout;
    }

    xhr.addEventListener('load', function (e) {
      config.callbacks.always.call(this, e);
      if (xhr.status === 200) {
        config.callbacks.done.call(this, e);
        resolve(this.response || this.responseText);
      } else {
        config.callbacks.fail.call(this, e);
        reject(new Error(this.statusText));
      }
    });

    xhr.addEventListener('error', function (e) {
      config.callbacks.always.call(this, e);
      config.callbacks.fail.call(this, e);
      reject(new Error('Network Error'));
    });

    // more custom events
    config.xhr.call(xhr, config, resolve, reject);

    xhr.open(config.method, url);

    for (var i = 0, c = config.headers.length; i < c; i++) {
      xhr.setRequestHeader.apply(xhr, config.headers[i]);
    }

    xhr.send(sendData);

  });

}

ajax.defaults = {
  method: 'get',
  data: '', //urlencoded
  responseType: 'text',
  cache: true,
  headers: [
    ['X-Requested-With', 'XMLHttpRequest']
  ],
  postType: 'application/x-www-form-urlencoded', // or 'multipart/form-data'
  timeout: 0, //ms
  xhr: noop,
  callbacks: {
    done: noop,
    fail: noop,
    always: noop
  }
};

module.exports = ajax;
