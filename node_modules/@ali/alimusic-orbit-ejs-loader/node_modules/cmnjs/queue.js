/*
 var obj = {
 value: null
 };

 queue([

 function(callback) {
 setTimeout(function() {
 this.value = 10;
 callback(20);
 }.bind(this), 200);
 },

 function(callback, add) {
 console.log(1, this.value + add);
 callback();
 },

 function(callback) {
 console.log(2, obj.value);
 callback();
 },

 function(callback) {
 console.log(3, obj.value);
 callback();
 },

 function(callback) {
 console.log(4, obj.value);
 callback();
 }

 ], obj);
 */

module.exports = function queue(funcs, scope) {
  (function next() {
    if (funcs.length > 0) {
      funcs.shift().apply(scope || {},
        [next].concat(Array.prototype.slice.call(arguments, 0)));
    }
  })();
};
