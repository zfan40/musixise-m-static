// var dictEncoding =
// caesar.prepareDictionary(true, 'abcdefghijklmnoprstuwyz01234567890', 10);
// var encoded = caesar.encode('Ala ma kota', dictEncoding);
// if no seconf param, defaults will be used

// abcdefghijklmnoprstuwyz0123456789 - you will loose big big letters

var replaceLoop = require('./replaceLoop');

var defaults = {
  rotation: 5,
  source: 'abcdefghijklmnoprstuwyz',
  dictionaries: []
};

function prepareDictionary(encoding, rotation, source) {

  var cipher;
  var i = 0;
  var c;
  var cacheAble;
  var returnObj = {};

  // boolean to number
  encoding |= 0;

  // simple check
  rotation = rotation > 0 && rotation || defaults.rotation;

  // even more simple
  source = source || defaults.source;

  c = source.length;

  cacheAble = rotation === defaults.rotation && source === defaults.source;

  if (cacheAble && defaults.dictionaries[encoding]) {
    return defaults.dictionaries[encoding];
  }

  cipher = (source.substr(-rotation) + source.substr(0, c - rotation))
    .split('');

  source = source.split('');

  if (encoding) {
    for (; i < c; i++) {
      returnObj[source[i].toUpperCase()] = cipher[i].toUpperCase();
      returnObj[source[i]] = cipher[i];
    }
  } else {
    for (; i < c; i++) {
      returnObj[cipher[i].toUpperCase()] = source[i].toUpperCase();
      returnObj[cipher[i]] = source[i];
    }
  }

  if (cacheAble && !defaults.dictionaries[encoding]) {
    defaults.dictionaries[encoding] = returnObj;
  }

  return returnObj;

}

function caesar(encoding, str, charObj) {

  charObj = charObj || prepareDictionary(encoding);

  str = replaceLoop(str, charObj);

  return str;

}

module.exports = {
  prepareReplacement: prepareDictionary,
  encode: caesar.bind(null, true),
  decode: caesar.bind(null, false)
};
