var noop = require('./function/noop');

var canvasTest = document.createElement('canvas');
var supportTest = !!(canvasTest.getContext && canvasTest.getContext('2d'));
var contextTest = supportTest ? canvasTest.getContext('2d') : undefined;
var devicePixelRatioTest = window.devicePixelRatio || 1;
var backingStoreRatioTest;

if (supportTest) {
  backingStoreRatioTest =
    contextTest.webkitBackingStorePixelRatio ||
    contextTest.mozBackingStorePixelRatio ||
    contextTest.msBackingStorePixelRatio ||
    contextTest.oBackingStorePixelRatio ||
    contextTest.backingStorePixelRatio || 1;
}

// example
//if (scale && devicePixelRatio !== backingStoreRatio) {
//  scale(canvas, ctx, devicePixelRatio, backingStoreRatio);
//}
function scale(canvas, ctx, devicePixelRatio, backingStoreRatio) {

  var ratio;
  var oldWidth;
  var oldHeight;

  if (!canvas || canvas.tagName !== 'CANVAS') {
    return;
  }

  ctx = ctx || canvas.getContext('2d');
  devicePixelRatio = devicePixelRatio || devicePixelRatioTest;
  backingStoreRatio = backingStoreRatio || backingStoreRatioTest;

  oldWidth = canvas.width;
  oldHeight = canvas.height;

  ratio = devicePixelRatio / backingStoreRatio;

  canvas.width = oldWidth * ratio;
  canvas.height = oldHeight * ratio;
  canvas.style.width = oldWidth + 'px';
  canvas.style.height = oldHeight + 'px';

  ctx.scale(ratio, ratio);

}

module.exports = {
  devicePixelRatio: devicePixelRatioTest,
  support: supportTest,
  backingStoreRatio: backingStoreRatioTest,
  scale: supportTest ? scale : noop
};
