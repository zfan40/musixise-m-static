// cache is default
// text from xhr or dom element

var ajax = require('./ajax');
var typeCheck = require('./type/check');
var identify = require('./dom/identify');

function getTemplate(path, noCache, ajaxOptions) {

  var type;
  var html;
  var cachePath;

  if (path.nodeType) {

    type = 'dom';
    cachePath = identify(path);

  } else {

    path = path || global.location.pathname;
    cachePath = path;

  }

  return new Promise(function (resolve, reject) {

    if (!noCache && getTemplate.cache[cachePath]) {

      // cache

      resolve(getTemplate.cache[cachePath]);

    } else if (type === 'dom') {

      // dom

      html = path.innerHTML;
      if (!noCache) {
        getTemplate.cache[cachePath] = html;
      }
      resolve(html);

    } else {

      // ajax

      if (typeCheck(ajaxOptions) !== 'object') {
        ajaxOptions = { dupa: 1 };
      }

      ajax(path, ajaxOptions)
        .then(function (response) {
          if (!noCache) {
            getTemplate.cache[cachePath] = response;
          }
          resolve(response);
        })
        .catch(reject);

    }

  });

}

getTemplate.cache = {};
// change to localStorage after import
// getTemplate.cache = global.localStorage;

module.exports = getTemplate;
